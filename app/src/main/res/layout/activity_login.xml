<?xml version="1.0" encoding="utf-8"?>

<!--
Match Parent : Push to cover viewport
Wrap Content : Size depends on content

Tools : View on Design (only)

- Constraint Layout: Similar to Relative Layout
By Default in Android Studio
Elements REACT to changes
All views needs to be aligned

app namespace -> res-auto
Ctrl + Alt + L -> Organize code

If at runtime we have an animation that modifies an element (hides/shows) like android:visibility="gone",
with Constraint Layout all the elements connected will be accommodated when this change is detected.


Styles Order:
1. Element style
2. General style
3. Theme style

If our element have a property, even if Theme is global, element property have priority


# # # # # # # # * Android Resource Naming * # # # # # # # #
<WHAT>_<WHERE>_<DESCRIPTION>_<SIZE>

<WHAT> fixed set of options choose the right one below
<WHERE> custom part Android view subclass "all" if reused in != screens
<DESCRIPTION> differentiate multiple elements on one screen
<SIZE> always optional [xdp] or bucket [small]


Layouts
<WHAT>_<WHERE>.xml -> <WHAT> is activity, fragment, view, item, or layout
e.g. activity_main.xml

Strings
<WHERE>_<DESCRIPTION>
e.g. main_intro or all_done

Drawables
<WHERE>_<DESCRIPTION>_<SIZE>
e.g. all_infoicon_small or main_background

IDs
<WHAT>_<WHERE>_<DESCRIPTION> -> <WHAT> is name of Android/Custom view class
e.g. linearlayout_main_fragmentcontainer

Dimensions
<WHAT>_<WHERE>_<DESCRIPTION>_<SIZE> -> <WHAT> is width, height, size, margin, padding, elevation, keylinew or textsize
e.g. keyline_all_text


-->

<!--
Include: Constraint inside Constraint (children) X_X
Better: MERGE, merges layout B to layout A
-->

<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <include
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        layout="@layout/merge_logo"
        />
    <!--layout="@layout/include_logo"
    android:id="@+id/include_logo"-->

    <EditText
        android:id="@+id/etLoginUsername"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_margin="12dp"
        android:drawableStart="@drawable/ic_person"
        android:drawablePadding="12dp"
        android:drawableTint="@color/colorAccent"
        android:hint="@string/hint_user"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/ivLoginLogo" />

    <EditText
        android:id="@+id/etLoginPassword"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_margin="12dp"
        android:drawableStart="@drawable/ic_lock"
        android:drawablePadding="12dp"
        android:drawableTint="@color/colorAccent"
        android:hint="@string/hint_password"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/etLoginUsername" />

    <Button
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="12dp"
        android:id="@+id/button2"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:backgroundTint="@color/colorPrimary"
        android:text="@string/button_login" />
</androidx.constraintlayout.widget.ConstraintLayout>